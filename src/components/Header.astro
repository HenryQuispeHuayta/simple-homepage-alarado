---
import type navType from "../types";
import ThemeButton from "./ThemeButton.astro";

interface Props {
  navItems: navType[];
}

const { navItems } = Astro.props;
---

<header>
  <img src="/logo_dark.svg" alt="logo" class="logo" />
  <nav>
    <input type="checkbox" id="check" />
    <label for="check" class="checkbtn">
      <img src="/hamburger-button.svg" alt="hamburger-button" />
    </label>
    <ul>
      {navItems.map(({ href, name }) => <a href={href}>{name}</a>)}
    </ul>
    <ThemeButton />
  </nav>
</header>

<style>
  header {
    display: flex;
    justify-content: space-between;
    width: 98%;
  }
  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
    height: 80px;
    width: 65%;
    gap: 20px;
  }
  ul {
    display: flex;
    padding: 0;
    margin: 0;
    gap: 40px;
  }
  ul a {
    color: var(--text-color);
    font-weight: 600;
    text-decoration: none;
    transition: color 0.3s;
  }
  ul a:hover {
    color: lightgreen;
  }
  .checkbtn {
    font-size: 30px;
    color: white;
    cursor: pointer;
    display: none;
  }
  #check {
    display: none;
  }
  img {
    max-width: 140px;
  }

  @media (max-width: 850px) {
    .checkbtn {
      display: flex;
      order: 1;
      margin-right: 20px;
    }

    ul {
      opacity: 0.9;
      position: fixed;
      top: 80px;
      right: -100%;
      width: 65%;
      height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      transition: all 0.3s;
      background-color: var(--background-color);
    }

    ul a {
      margin: 20px 0;
      font-size: 20px;
    }

    #check:checked ~ ul {
      right: 0;
    }

    nav {
      width: auto;
    }
  }
</style>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");

    const moonIcon = document.querySelector(".moon-icon");
    const sunIcon = document.querySelector(".sun-icon");
    const logo = document.querySelector(".logo");

    if (isDark) {
      moonIcon.src = "/Moon_fill.svg";
      sunIcon.src = "/Sun_fill_light.svg";
      logo.src = "/logo_dark.svg";
    } else {
      moonIcon.src = "/Moon_fill_light.svg";
      sunIcon.src = "/Sun_fill.svg";
      logo.src = "/logo_light.svg";
    }

    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  const moonIcon = document.querySelector(".moon-icon");
  const sunIcon = document.querySelector(".sun-icon");
  const logo = document.querySelector(".logo");

  if (theme === "dark") {
    moonIcon.src = "/Moon_fill_dark.svg";
    sunIcon.src = "/Sun_fill.svg";
    logo.src = "/logo_dark.svg";
  } else {
    moonIcon.src = "/Moon_fill_light.svg";
    sunIcon.src = "/Sun_fill.svg";
    logo.src = "/logo_light.svg";
  }

  document
    .getElementById("themeToggle")
    .addEventListener("click", handleToggleClick);
</script>
